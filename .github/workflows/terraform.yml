name: 'Terraform'

on:
  push:
    branches:
      - "dev"
      - "feature/*"
  pull_request:
    branches:
      - "main"

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    # container:
    #   image: makeittotop/terraform_opa:latest
    #   env:
    #     TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
    steps:
    - name: code checkout
      uses: actions/checkout@v2
    - name: Setup OPA
      run: |
        curl -L -o opa https://github.com/open-policy-agent/opa/releases/download/v0.27.1/opa_linux_amd64
        chmod +x opa
        sudo mv opa /usr/local/bin/opa
        opa version
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_version: 0.15.0
    - run: terraform version
    # - name: create terraform resource file
    #   run: |2
    #     cat > $HOME/.terraformrc << EOF
    #     credentials "app.terraform.io" {
    #       token = "${TF_API_TOKEN}"
    #     }
    #     disable_checkpoint = true
    #     EOF
    - name: Terraform Fmt
      id: fmt
      run: terraform fmt -check
    - name: Terraform Init
      id: init
      run: terraform init
    - name: Terraform Validate
      id: validate
      run: terraform validate
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      #if: github.event_name == 'pull_request'
      continue-on-error: true
    - name: pull-request
      id: open-pr
      if: github.event_name == 'push' && steps.plan.conclusion == 'success'
      uses: repo-sync/pull-request@v2
      with:
        # https://github.com/marketplace/actions/github-pull-request-action
        destination_branch: "main"
        pr_title: "Automating pulling of ${{ github.ref }} into main"
        pr_body: ":crown: An *automated* PR for *Project Arnold* TF iac. Updated TF plan below"
        pr_allow_empty: false
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: pr-output
      if: steps.open-pr.conclusion == 'success'
      run: |
        echo ${{steps.open-pr.outputs.pr_url}}
        echo ${{steps.open-pr.outputs.pr_number}}
        echo ${{steps.open-pr.outputs.has_changed_files}}
        echo ${{steps.open-pr.outputs.pr_number}}
    - name: Update Pull Request
      uses: actions/github-script@v4
      #if: github.event_name == 'pull_request'
      if: steps.open-pr.conclusion == 'success'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const issue_number = `${{ steps.open-pr.outputs.pr_number }}`
          const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.conclusion }}\`
          #### Terraform Validation ⚙️\`${{ steps.validate.conclusion }}\`
          #### Terraform Initialization ⚙️\`${{ steps.init.conclusion }}\`
          #### Terraform Plan 📖\`${{ steps.plan.conclusion }}\`
          <details><summary>Show Plan</summary>
          \`\`\`${process.env.PLAN}\`\`\`
          </details>
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.issues.createComment({
            issue_number: issue_number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    - name: Terraform Plan Status
      id: plan_status
      if: steps.plan.outcome == 'failure'
      run: exit 1
    - name: Terraform Apply
      id: apply
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve





