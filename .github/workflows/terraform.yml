name: 'Terraform'

on:
  push:
    branches:
      - "dev"
      - "feature/*"
  pull_request:
    branches:
      - "main"

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-18.04
    container:
      image: makeittotop/terraform_opa:latest
      env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
    steps:
    - name: code checkout
      uses: actions/checkout@v2
    - name: create terraform resource file
      run: |2
        cat > $HOME/.terraformrc << EOF
        credentials "app.terraform.io" {
          token = "${TF_API_TOKEN}"
        }
        disable_checkpoint = true
        EOF
    - name: Terraform Fmt
      id: fmt
      run: terraform fmt -check
    - name: Terraform Init
      id: init
      run: terraform init
    - name: Terraform Validate
      id: validate
      run: terraform validate
    - name: Terraform Plan
      id: plan
      run: |2
        TFPLAN_OUT=$(terraform plan -no-color)
        echo "::set-output name=OUTPUT::$TFPLAN_OUT"
      continue-on-error: true
    - name: Set the value
      id: step_one
      run: echo "::set-output name=FOO::BAR"
    - name: Use it
      run: echo ${{ steps.step_one.outputs.FOO }}
    - name: debug
      run: |2
        echo ${{ toJson(steps.plan.outputs) }}
    - name: Update Pull Request
      uses: actions/github-script@v4
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.OUTPUT }}"         
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
          #### Terraform Validation ⚙️\`${{ steps.validate.outcome }}\`
          #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
          #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
          <details><summary>Show Plan</summary>
          \`\`\`${process.env.PLAN}\`\`\`
          </details>
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    - name: Terraform Plan Status
      id: plan_status
      if: steps.plan.outcome == 'failure'
      run: exit 1
    - name: Terraform Apply
      id: apply
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve





