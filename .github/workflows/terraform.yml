name: 'Terraform'

on:
  push:
    branches:
      - "dev"
      - "feature/*"
  pull_request:
    branches:
      - "main"

jobs:
  terraform:
    env:
      TF_API_TOKEN: $${{ secrets.TF_API_TOKEN }}
    name: 'Terraform'
    runs-on: ubuntu-18.04
    container:
      image: makeittotop/terraform_opa:latest
    steps:
    - name: Print Github Events env. vars
      run: |2
        echo ${{ github.event_name }}
        echo ${{ github.ref }}
        echo ${{ github.head_ref }}
        echo ${{ github.base_ref }}
        echo ${{ github.sha }}
        echo ${{ TF_API_TOKEN }}
    - uses: actions/checkout@v2
    - name: terrafrom version
      run: terraform version
    - name: opa version
      run: opa version
    - name: terrafrom fmt
      run: terraform fmt -check
    - name: terrafrom init
      run: terraform init
    - name: terraform validate
      run: terraform validate
    - name: terrafrom plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color
      continue-on-error: true
    - name: Update Pull Request
      uses: actions/github-script@v4
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Validation ‚öôÔ∏è\`${{ steps.validate.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          <details><summary>Show Plan</summary>
          \`\`\`${process.env.PLAN}\`\`\`
          </details>
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
    - name: Terraform Apply
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve





